{"version":3,"sources":["FilteredHeroes.js","GameMode.js","MatchHistory.js","Header.js","Heroes.js","Login.jsx","HeroStats.js","App.js","serviceWorker.js","index.js"],"names":["FilteredHeroes","_ref","hero_id","filterHero","heroes","filter","id","react_default","a","createElement","map","mapHero","index","key","src","concat","img","alt","style","width","data-for","data-tip","localized_name","dist_default","place","type","effect","getContent","dataTip","GameMode","gameid","filterConstant","constant","game_mode","mode","name","MatchHistory","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getTime","duration","minutes","Math","floor","seconds","console","log","toString","length","state","players","personaname","mmr_estimate","rank_tier","solo_competitive_rank","avatar","wl","win","lose","recentMatches","constantgamemode","gameModeInfo","isFatching","_this2","account_id","props","match","params","fetch","then","results","json","data","setState","profile","estimate","avatarfull","profileurl","catch","error","winRate","parseFloat","toFixed","rep","skill","_this3","className","fontWeight","fontSize","color","target","rel","href","Table","responsive","hover","repo","match_id","src_FilteredHeroes","radiant_win","src_GameMode","gold_per_min","xp_per_min","kills","deaths","assists","React","Component","Header","onChangeSearchText","text","onLogin","Navbar","inverse","collapseOnSelect","Brand","Toggle","Collapse","Nav","activeKey","NavItem","Form","pullRight","FormGroup","FormControl","placeholder","value","onChange","Button","onClick","Heroes","Link","to","Login","getGenericID","marginBottom","bsStyle","bsSize","marginTop","borderRadius","HeroStats","heroData","heroID","filtered","parseInt","heroid","roles","base_health","base_health_regen","base_mana","base_mana_regen","base_str","base_agi","base_int","attack_range","attack_rate","attack_type","base_armor","move_speed","App","isLoggedIn","history","push","onLogout","undefined","event","currentID","selectedKey","_this$state","src_Header","handleSelect","Switch","Route","exact","path","render","src_Login","assign","src_MatchHistory","src_Heroes","component","withRouter","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b20747d.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nconst FilteredHeroes = ( {hero_id, heroes} ) => {\r\n    const filterHero = heroes.filter(\r\n        (filterHero) => {\r\n            return filterHero.id === hero_id.hero_id\r\n        }    \r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {filterHero.map(\r\n                (mapHero, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <img src={`https://api.opendota.com${mapHero.img}`} alt='hero' style={{width: 100}} data-for='getContent' data-tip={mapHero.localized_name} />\r\n                            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\"\r\n                                id='getContent' \r\n                                getContent={(dataTip) => <div>{dataTip}</div>}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default FilteredHeroes","import React from 'react'\r\n\r\nconst GameMode = ( {gameid, constant} ) => {\r\n    const filterConstant = constant.filter(\r\n        (filterConstant) => {\r\n            return filterConstant[22].id === gameid.game_mode;\r\n        }\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            {filterConstant.map(                \r\n                (mode) => {\r\n                    return mode[22].name\r\n                }\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GameMode","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport './App.css'\r\nimport FilteredHeroes from './FilteredHeroes'\r\nimport GameMode from './GameMode'\r\nimport constantgamemode from '../src/constants/ConstantGameMode.json'\r\n\r\nclass MatchHistory extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      players: {\r\n        personaname: '',\r\n        mmr_estimate: '',\r\n        rank_tier: '',\r\n        solo_competitive_rank: '',\r\n        avatar: ''\r\n      },\r\n      wl: { win: '', lose: '' },\r\n      recentMatches: [],\r\n      heroes: [],\r\n      constantgamemode: constantgamemode,\r\n      gameModeInfo: [],\r\n      isFatching: true\r\n    }\r\n    \r\n  }  \r\n\r\n  componentDidMount() {\r\n    const account_id = this.props.match.params.id\r\n    fetch(`https://api.opendota.com/api/players/${account_id}`)\r\n      .then(results => {\r\n        return results.json()\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          players: {\r\n            personaname: data.profile.personaname,\r\n            mmr_estimate: data.mmr_estimate.estimate,\r\n            rank_tier: data.rank_tier,\r\n            solo_competitive_rank: data.solo_competitive_rank,\r\n            avatar: data.profile.avatarfull,\r\n            profileurl: data.profile.profileurl\r\n          }\r\n        })\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n\r\n    fetch(`https://api.opendota.com/api/players/${account_id}/wl`)\r\n      .then(results => {\r\n        return results.json()\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          wl: {\r\n            win: data.win,\r\n            lose: data.lose,\r\n            winRate: parseFloat(\r\n              data.win / (data.win + data.lose) * 100\r\n            ).toFixed(2) + '%'\r\n          }\r\n        })\r\n      })\r\n\r\n    fetch(\r\n      `https://api.opendota.com/api/players/${account_id}/recentMatches`\r\n    )\r\n      .then(results => {\r\n        return results.json()\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          recentMatches: data //.sort((a, b) => a.match_id > b.match_id)\r\n        })\r\n\r\n        data.map(rep => {\r\n          if (rep.skill === 1) {\r\n            return this.setState({ skill: 'Normal' })\r\n          } else if (rep.skill === 2) {\r\n            return this.setState({ skill: 'High' })\r\n          } else return this.setState({ skill: 'Very High' })\r\n         \r\n        })\r\n        \r\n      })\r\n\r\n    fetch(`https://api.opendota.com/api/heroStats`)\r\n      .then(results => {\r\n        return results.json()\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          heroes: data\r\n        })\r\n      })\r\n  }\r\n\r\n  getTime = (duration) => {\r\n    var minutes = Math.floor(duration / 60);\r\n    var seconds = duration - minutes * 60;\r\n    console.log(minutes, seconds)\r\n    if (minutes.toString().length === 1 && seconds.toString().length === 1) {\r\n      return '0' + minutes + ':0' + seconds\r\n    }\r\n    else if (minutes.toString().length === 2 && seconds.toString().length === 1) {\r\n      return minutes + ':0' + seconds\r\n    }\r\n    else if (minutes.toString().length === 1 && seconds.toString().length === 2) {\r\n      return '0' + minutes + ':' + seconds\r\n    }\r\n    else {\r\n      return minutes + ':' + seconds\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { isFatching } = true;    \r\n    return (\r\n      <div className='home'>\r\n        <div className='player'>\r\n          <div className='playerInfo'>\r\n            <img\r\n              alt='Profile avatar'\r\n              className='avatar-photo'\r\n              src={this.state.players.avatar}\r\n            />\r\n            <div\r\n              className='personname'\r\n              style={{ fontWeight: 'bolder', fontSize: 28 }}\r\n            >\r\n              {this.state.players.personaname}\r\n            </div>\r\n            <div className='wins'>\r\n              <span style={{ color: 'black' }}>Wins</span>\r\n              {' '}\r\n              <div>{this.state.wl.win}</div>\r\n            </div>\r\n            <div className='losses'>\r\n              <span style={{ color: 'black' }}>Losses</span>\r\n              <div>{this.state.wl.lose}</div>\r\n            </div>\r\n            <div className='winrate'>\r\n              <span>Winrate</span>\r\n              {!isFatching && <div>{this.state.wl.winRate}</div>}\r\n            </div>\r\n          </div>\r\n          <div>Estimated MMR {this.state.players.mmr_estimate}</div>\r\n          <div>Solo Competitive {this.state.players.solo_competitive_rank}</div>\r\n          <div>Rank Tier {this.state.players.rank_tier}</div>\r\n\r\n          <div>\r\n            Profile Url\r\n            {' '}\r\n            <a\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              href={this.state.players.profileurl}\r\n            >\r\n              {' '}{this.state.players.profileurl}{' '}\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n        <div style={{ fontSize: 18, fontWeight: 'bold' }}>\r\n          <p>Recent Matches</p>\r\n        </div>\r\n        <Table style={{ width: 900 }} responsive hover>\r\n          <thead>\r\n            <tr>\r\n              <th>HERO</th>\r\n              <th>RESULT</th>\r\n              <th>GAME MODE</th>\r\n              <th>DURATION</th>\r\n              <th>GPM</th>\r\n              <th>XPM</th>\r\n              <th>KILL</th>\r\n              <th>DEATHS</th>\r\n              <th>ASSISTS</th>\r\n            </tr>\r\n          </thead>\r\n          {this.state.recentMatches.map(repo => {\r\n            return (\r\n              <tbody key={repo.match_id}>\r\n                <tr>\r\n                  <td>\r\n                    <FilteredHeroes hero_id={repo} heroes={this.state.heroes} />\r\n                  </td>\r\n                  <td>\r\n                    <div>{repo.radiant_win ? 'Radiant win' : 'Dire win'}</div>\r\n                  </td>\r\n                  <td>\r\n                    <div>\r\n                      <GameMode gameid={repo} constant={constantgamemode} />\r\n                    </div>\r\n                    <div>{this.state.skill}</div>\r\n                  </td>\r\n                  <td>\r\n                    <div>\r\n                      {this.getTime(repo.duration)}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div>{repo.gold_per_min}</div>\r\n                  </td>\r\n                  <td>\r\n                    <div>{repo.xp_per_min}</div>\r\n                  </td>\r\n                  <td>\r\n                    <div>{repo.kills}</div>\r\n                    <div\r\n                      className='killrate'\r\n                      style={{\r\n                        width: repo.kills /\r\n                          (repo.kills + repo.deaths + repo.assists) *\r\n                          100 +\r\n                          '%'\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                    </div>\r\n                    <div\r\n                      className='deathrate'\r\n                      style={{\r\n                        width: repo.deaths /\r\n                          (repo.kills + repo.deaths + repo.assists) *\r\n                          100 +\r\n                          '%'\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                    </div>\r\n                    <div\r\n                      className='assistrate'\r\n                      style={{\r\n                        width: repo.assists /\r\n                          (repo.kills + repo.deaths + repo.assists) *\r\n                          100 +\r\n                          '%'\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div>{repo.deaths}</div>\r\n                  </td>\r\n                  <td>\r\n                    <div>{repo.assists}</div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )\r\n          })}\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchHistory\r\n","import React from 'react'\r\nimport { Navbar, NavItem, Nav, Button, FormControl, FormGroup } from 'react-bootstrap'\r\n\r\nconst Header = ({ onChangeSearchText, text, onLogin }) => {\r\n  \r\n  return (\r\n    <Navbar inverse collapseOnSelect>\r\n      <Navbar.Header>\r\n        <Navbar.Brand>\r\n          <a href='/'>Dota Statistic</a>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n      </Navbar.Header>\r\n      <Navbar.Collapse>\r\n        <Nav activeKey={1}>\r\n          <NavItem href={`/heroes`}>Heroes </NavItem>\r\n        </Nav>\r\n       \r\n        <Navbar.Form pullRight>\r\n          <FormGroup>\r\n            <FormControl type=\"text\" placeholder=\"Search Steam32 ID\" value={text} onChange={onChangeSearchText}/>\r\n          </FormGroup>          \r\n            <a href={`/match/${text}`}><Button type=\"submit\" onClick={onLogin}>My Profile</Button></a>\r\n        </Navbar.Form>\r\n        \r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Heroes extends React.Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            heroes: []\r\n        }\r\n    }\r\n    \r\n    componentDidMount () {\r\n        fetch(`https://api.opendota.com/api/heroStats`)\r\n        .then(results => { return results.json() })\r\n        .then((data) => {\r\n            this.setState({\r\n                heroes: data\r\n            })\r\n        })        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='main-heroes'>\r\n                <div style={{fontSize: 18, fontWeight: 'bold'}}>Heroes</div>\r\n                <hr/>\r\n                <div className='heroes'>\r\n                    {this.state.heroes.map((repo, index) => {\r\n                        return (\r\n                            <div key={index} className='hero-list' >\r\n                                <div>{repo.localized_name}</div>\r\n                                <div>\r\n                                    <Link to={`/heroes/${repo.id}`}>\r\n                                        <img alt='Hero' \r\n                                            src={`https://api.opendota.com${repo.img}`} \r\n                                            style={{width: 150}}\r\n                                        />\r\n                                    </Link>                                    \r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Heroes","import React from 'react'\r\nimport {\r\n  Button\r\n} from 'react-bootstrap'\r\n\r\nconst Login = ({ getGenericID }) => {\r\n  return (\r\n    <div className='login'>\r\n      <h1 className='welcome'> {' '}Welcome to Dota Statistcs </h1>\r\n\r\n      <div className='info'><div className='info-bckgrnd'>Get your steam32 ID, paste on input above and click on My Profile Button</div></div>\r\n\r\n      <div>\r\n        <a\r\n          href='https://steamid.xyz/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n          style={{marginBottom: 20, fontSize: 25}}\r\n        >\r\n          <Button bsStyle=\"success\" bsSize=\"large\" style={{marginTop: 30, marginBottom: 15, borderRadius: 5}} >Get your steam32 ID</Button>          \r\n        </a>\r\n        <div>\r\n          <Button bsStyle=\"info\" bsSize=\"large\" onClick={getGenericID} style={{borderRadius: 5}} >I don't have Steam ID</Button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nclass HeroStats extends React.Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            heroData: [],\r\n            heroID: 0\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetch(`https://api.opendota.com/api/heroStats`)\r\n        .then(results => { return results.json() })\r\n        .then((data) => {\r\n            this.setState({                \r\n                heroData: data.filter(\r\n                    (filtered => {\r\n                        return filtered.id === parseInt(this.props.match.params.heroid)\r\n                    })\r\n                )\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {        \r\n        return (\r\n            <div >\r\n                {this.state.heroData.map(                    \r\n                    (repo => {                            \r\n                        return (\r\n                            <div>\r\n                                <img src={`https://api.opendota.com${repo.img}`} alt='hero'/>\r\n                                <div>{repo.localized_name}</div>\r\n                                <div>Roles: {repo.roles}</div>\r\n\r\n                                <div>HP: {repo.base_health} | Regen: {repo.base_health_regen}</div>\r\n                                <div>MP: {repo.base_mana} | Regen: {repo.base_mana_regen}</div>\r\n\r\n                                <div>Strength: {repo.base_str}</div>\r\n                                <div>Agillity: {repo.base_agi}</div>\r\n                                <div>Intellect: {repo.base_int}</div>\r\n\r\n                                <div>Attack range: {repo.attack_range}</div>\r\n                                <div>Attack rate: {repo.attack_rate}</div>\r\n                                <div>Attack type: {repo.attack_type}</div>\r\n\r\n                                <div>Base Armor: {repo.base_armor}</div>\r\n                                <div>Move Speed: {repo.move_speed}</div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroStats","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport MatchHistory from './MatchHistory'\r\nimport Header from './Header.js'\r\nimport Heroes from './Heroes'\r\nimport Login from './Login.jsx'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport HeroStats from './HeroStats';\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      activeKey: 1,\r\n      players: {\r\n        personaname: '',\r\n        mmr_estimate: '',\r\n        rank_tier: '',\r\n        solo_competitive_rank: '',\r\n        avatar: ''\r\n      },\r\n      wl: { win: '', lose: '' },\r\n      recentMatches: [],\r\n      heroes: [],\r\n      currentID: undefined\r\n    }\r\n  }\r\n\r\n  onLogin = () => {\r\n    this.setState({\r\n      isLoggedIn: true\r\n    }, () => {\r\n      this.state.history.push('/')\r\n    })\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.setState(\r\n      { isLoggedIn: undefined }, () => {\r\n        this.state.history.push('/')\r\n      }\r\n    )\r\n  }  \r\n\r\n  onChangeSearchText = (event) => {\r\n    this.setState({ text: event.target.value })\r\n  }\r\n\r\n\r\n  handleSelect(selectedKey) {\r\n    this.setState({ activeKey: selectedKey });\r\n  } \r\n\r\n  getGenericID = () => {\r\n    this.setState({ text: '83952806' })\r\n  }\r\n\r\n\r\n  render () {\r\n    const { isLoggedIn, account_id } = this.state\r\n    return (\r\n      <div className='App'>\r\n        <Header\r\n          isLoggedIn={isLoggedIn}\r\n          onLogin={this.onLogin}\r\n          onLogout={this.onLogout}\r\n          hero_id={this.hero_id}          \r\n          onChangeSearchText={this.onChangeSearchText}\r\n          text={this.state.text}\r\n          handleSelect={this.handleSelect}\r\n          activeKey={this.state.activeKey}\r\n        />\r\n        <Switch>\r\n          <Route exact path='/'  render={props => (\r\n              <Login {...props}\r\n                getGenericID={this.getGenericID}\r\n              />\r\n            )}/>\r\n          <Route\r\n            path='/match/:id'\r\n            render={props => (\r\n              <MatchHistory\r\n                {...props}\r\n                isLoggedIn={isLoggedIn}\r\n                account_id={account_id}\r\n                players={this.state.players}\r\n                wl={this.state.wl}\r\n                recentMatches={this.state.recentMatches}\r\n                skill={this.state.skill}\r\n                heroes={this.state.heroes}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact path='/heroes'\r\n            render={props => (\r\n              <Heroes {...props} account_id={this.state.text} />\r\n            )}\r\n          />          \r\n          <Route exact path='/heroes/:heroid' component={HeroStats} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter} from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}